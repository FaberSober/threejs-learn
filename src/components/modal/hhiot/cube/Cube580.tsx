/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 cube580.glb --keepgroups --keepnames
*/

import React, { useRef } from 'react'
import useHover from '../hooks/useHover'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three/examples/jsm/loaders/GLTFLoader'
import Indicator from '../Indicator'
import { CubeProps } from '../type'
import * as THREE from 'three'
import BimText3D from '../text/BimText3D'
import CubeInfoCard from '../card/CubeInfoCard'

type GLTFResult = GLTF & {
  nodes: { [key: string]: THREE.Mesh }
  materials: { [key: string]: THREE.MeshStandardMaterial }
}

export function Cube580({ ...props }: CubeProps) {
  const { nodes, materials } = useGLTF('/assets/model/hhiot/jz.glb')
  const targetRef = useRef<THREE.Group>(null!)
  const { hovered, setHovered, onPointerOver } = useHover()

  // 克隆材质以防止影响其他使用相同材质的对象
  const meshMaterial = materials.Color_M04.clone()

  // 设置发光效果
  if (hovered) {
    meshMaterial.emissive = new THREE.Color(0x666666)
  } else {
    meshMaterial.emissive = new THREE.Color(0x000000)
  }

  return (
    <group name="580" {...props} dispose={null}>
      <group
        ref={targetRef}
        name="Mesh580"
        position={[-15.494, 2.647, -19.706]}
        onPointerOver={onPointerOver}
      >
        <mesh name="Mesh580_1" geometry={nodes.Mesh580_1.geometry} material={meshMaterial} />
        {/* <mesh name="Mesh580_2" geometry={nodes.Mesh580_2.geometry} material={backMaterial} /> */}

        {/* 指示牌 */}
        {hovered && (
          <Indicator targetRef={targetRef} name='580' orientPos={[-30, 0, 0]}>
            <CubeInfoCard
              no='580'
              name='③联C40砼上涵首墙身及顶板'
              status='已浇筑'
              temperature={30}
              onClose={() => setHovered(false)}
            />
          </Indicator>
        )}
        <BimText3D text="580" width={6} position={[-12.3, -1, -17]} rotation={[0, -Math.PI / 2, 0]} />
      </group>
    </group>
  )
}

useGLTF.preload('/assets/model/hhiot/jz.glb')
