/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 cube424.glb --keepgroups --keepnames
*/

import React, { useRef, useState } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three/examples/jsm/loaders/GLTFLoader'
import Indicator from '../Indicator'
import { CubeProps } from '../type'
import * as THREE from 'three'
import BimText3D from '../text/BimText3D'

type GLTFResult = GLTF & {
  nodes: { [key: string]: THREE.Mesh }
  materials: { [key: string]: THREE.MeshStandardMaterial }
}

export function Cube424({ ...props }: CubeProps) {
  const { nodes, materials } = useGLTF('/assets/model/hhiot/jz.glb') as GLTFResult
  const targetRef = useRef<THREE.Group>(null!)
  const [hovered, setHovered] = useState(false)

  // 克隆材质以防止影响其他使用相同材质的对象
  const meshMaterial = materials.Color_M04.clone()
  const frontMaterial = materials.FrontColor.clone()
  const backMaterial = materials.BackColor.clone()

  // 设置发光效果
  if (hovered) {
    meshMaterial.emissive = new THREE.Color(0x666666)
    frontMaterial.emissive = new THREE.Color(0x666666)
    backMaterial.emissive = new THREE.Color(0x666666)
  } else {
    meshMaterial.emissive = new THREE.Color(0x000000)
    frontMaterial.emissive = new THREE.Color(0x000000)
    backMaterial.emissive = new THREE.Color(0x000000)
  }

  return (
    <group name="424" {...props} dispose={null}>
      <group
        ref={targetRef}
        name="Mesh424"
        position={[14.906, 3.15592, 62.43]}
        onPointerOver={(e) => {
          e.stopPropagation()
          setHovered(true)
          document.body.style.cursor = 'pointer'
        }}
        onPointerOut={(e) => {
          e.stopPropagation()
          setHovered(false)
          document.body.style.cursor = 'default'
        }}
      >
        <group name="pipe001">
          <group name="Mesh10">
            <mesh name="Mesh009" geometry={nodes.Mesh009.geometry} material={frontMaterial} />
            <mesh name="Mesh009_1" geometry={nodes.Mesh009_1.geometry} material={backMaterial} />
          </group>
          <group name="Mesh11">
            <mesh name="Mesh010" geometry={nodes.Mesh010.geometry} material={frontMaterial} />
            <mesh name="Mesh010_1" geometry={nodes.Mesh010_1.geometry} material={backMaterial} />
          </group>
          <group name="Mesh12">
            <mesh name="Mesh011" geometry={nodes.Mesh011.geometry} material={frontMaterial} />
            <mesh name="Mesh011_1" geometry={nodes.Mesh011_1.geometry} material={backMaterial} />
          </group>
          <group name="Mesh13">
            <mesh name="Mesh012" geometry={nodes.Mesh012.geometry} material={frontMaterial} />
            <mesh name="Mesh012_1" geometry={nodes.Mesh012_1.geometry} material={backMaterial} />
          </group>
        </group>

        <mesh name="Mesh424" geometry={nodes.Mesh424.geometry} material={meshMaterial} />

        {/* 指示牌 */}
        {hovered && <Indicator targetRef={targetRef} name='424' />}
        <BimText3D text="424" width={6} position={[5, -2, 9]} />
        <BimText3D text="424" width={6} position={[12.3, -2, 8]} rotation={[0, Math.PI / 2, 0]} />
      </group>
    </group>
  )
}

useGLTF.preload('/assets/model/hhiot/jz.glb')
